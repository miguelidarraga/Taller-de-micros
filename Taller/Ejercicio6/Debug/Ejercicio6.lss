
Ejercicio6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000957  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000820  00000000  00000000  00000b77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f2  00000000  00000000  00001397  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000168c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042e  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000125  00000000  00000000  00001ade  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001c03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	4d c0       	rjmp	.+154    	; 0x136 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#define ROJO_VEHICULO     (1 << PA2)
#define VERDE_PEATON      (1 << PA3)

int main(void) {
	// Botón como entrada con pull-up interno
	DDRD &= ~(1 << BTN_PEATONAL);
  9e:	8a b1       	in	r24, 0x0a	; 10
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << BTN_PEATONAL);
  a4:	8b b1       	in	r24, 0x0b	; 11
  a6:	81 60       	ori	r24, 0x01	; 1
  a8:	8b b9       	out	0x0b, r24	; 11

	// LEDs como salida
	DDRA |= VERDE_VEHICULO | AMARILLO_VEHICULO | ROJO_VEHICULO | VERDE_PEATON;
  aa:	81 b1       	in	r24, 0x01	; 1
  ac:	8f 60       	ori	r24, 0x0F	; 15
  ae:	81 b9       	out	0x01, r24	; 1

	uint8_t peatones_piden_cruce = 0;
  b0:	80 e0       	ldi	r24, 0x00	; 0

	while (1) {
		// TEST: mostrar estado real del botón en ROJO_VEHICULO
		if (!(PIND & (1 << BTN_PEATONAL))) {
  b2:	48 99       	sbic	0x09, 0	; 9
  b4:	05 c0       	rjmp	.+10     	; 0xc0 <main+0x22>
			PORTA |= ROJO_VEHICULO;   // botón presionado
  b6:	82 b1       	in	r24, 0x02	; 2
  b8:	84 60       	ori	r24, 0x04	; 4
  ba:	82 b9       	out	0x02, r24	; 2
			peatones_piden_cruce = 1;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	03 c0       	rjmp	.+6      	; 0xc6 <main+0x28>
			} else {
			PORTA &= ~ROJO_VEHICULO;  // botón suelto
  c0:	92 b1       	in	r25, 0x02	; 2
  c2:	9b 7f       	andi	r25, 0xFB	; 251
  c4:	92 b9       	out	0x02, r25	; 2
		}

		// Secuencia normal del semáforo
		PORTA = VERDE_VEHICULO;
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	2a e2       	ldi	r18, 0x2A	; 42
  cc:	30 e5       	ldi	r19, 0x50	; 80
  ce:	4e ef       	ldi	r20, 0xFE	; 254
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	30 40       	sbci	r19, 0x00	; 0
  d6:	40 40       	sbci	r20, 0x00	; 0
  d8:	90 40       	sbci	r25, 0x00	; 0
  da:	d9 f7       	brne	.-10     	; 0xd2 <main+0x34>
  dc:	00 00       	nop
		_delay_ms(5000);

		PORTA = AMARILLO_VEHICULO;
  de:	92 e0       	ldi	r25, 0x02	; 2
  e0:	92 b9       	out	0x02, r25	; 2
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	31 e1       	ldi	r19, 0x11	; 17
  e6:	4a e7       	ldi	r20, 0x7A	; 122
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	30 40       	sbci	r19, 0x00	; 0
  ec:	40 40       	sbci	r20, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x4a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x54>
  f2:	00 00       	nop
		_delay_ms(2000);

		PORTA = ROJO_VEHICULO;
  f4:	94 e0       	ldi	r25, 0x04	; 4
  f6:	92 b9       	out	0x02, r25	; 2

		if (peatones_piden_cruce) {
  f8:	88 23       	and	r24, r24
  fa:	91 f0       	breq	.+36     	; 0x120 <main+0x82>
			PORTA |= VERDE_PEATON;
  fc:	82 b1       	in	r24, 0x02	; 2
  fe:	88 60       	ori	r24, 0x08	; 8
 100:	82 b9       	out	0x02, r24	; 2
 102:	8a e2       	ldi	r24, 0x2A	; 42
 104:	90 e5       	ldi	r25, 0x50	; 80
 106:	2e ef       	ldi	r18, 0xFE	; 254
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	81 50       	subi	r24, 0x01	; 1
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	20 40       	sbci	r18, 0x00	; 0
 110:	30 40       	sbci	r19, 0x00	; 0
 112:	d9 f7       	brne	.-10     	; 0x10a <main+0x6c>
 114:	00 00       	nop
			_delay_ms(5000);
			PORTA &= ~VERDE_PEATON;
 116:	82 b1       	in	r24, 0x02	; 2
 118:	87 7f       	andi	r24, 0xF7	; 247
 11a:	82 b9       	out	0x02, r24	; 2
			peatones_piden_cruce = 0;
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	c9 cf       	rjmp	.-110    	; 0xb2 <main+0x14>
 120:	4a e2       	ldi	r20, 0x2A	; 42
 122:	90 e5       	ldi	r25, 0x50	; 80
 124:	2e ef       	ldi	r18, 0xFE	; 254
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	41 50       	subi	r20, 0x01	; 1
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	20 40       	sbci	r18, 0x00	; 0
 12e:	30 40       	sbci	r19, 0x00	; 0
 130:	d9 f7       	brne	.-10     	; 0x128 <main+0x8a>
 132:	00 00       	nop
 134:	be cf       	rjmp	.-132    	; 0xb2 <main+0x14>

00000136 <_exit>:
 136:	f8 94       	cli

00000138 <__stop_program>:
 138:	ff cf       	rjmp	.-2      	; 0x138 <__stop_program>
